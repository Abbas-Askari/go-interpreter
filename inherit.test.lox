func Man(name, age) {    
    print "this: " + this;
    this.name = name;
    this.age = age;
    print "ret: " + this;
}

print "Man.prototype: " + Man.prototype;
Man.prototype.introduce = (other) => {
    return "My name is " + this.name + " and I am " + this.age + " years old. Hi " + other + "!";
};

print Man.prototype.introduce("Alice");


let m = new Man("Bob", 30);
print m;
print m.introduce("Alice");

func Woman(name, age, hobby) {
    this.super = Man;
    this.super(name, age); // Call the superclass constructor
    this.hobby = hobby;
}

Woman.prototype.__proto__ = Man.prototype;

Woman.prototype.annoy = () => {
    return "I love " + this.hobby + "!";
};

let w = new Woman("Alice", 28, "painting");
print w;
print w.introduce("Bob");
print w.annoy();

print w.introduce == m.introduce; // Should be true
print w.annoy == m.introduce; // Should be false
print w.super == m.super; // Should be false


Man.prototype.introduce = (other) => {
    return "Changed!";
};

print w.introduce("Bob"); // Should reflect the change
print m.introduce("Alice"); // Should reflect the change