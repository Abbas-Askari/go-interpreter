import "os";

func makeCounter(x) {
    let ret = 0;
    {
        let l = x + 1;
        func count() {
                print "X is " + (l = l + 1);
        }
        ret = count;
    }
    return ret;
}
let c1 = makeCounter(1);
let c2 = makeCounter(100);
c1(); // X is 3
c1(); // X is 4
c2(); // X is 102
c2(); // X is 103


os.exit(0); // to stop here


func givePrinter(msg) {
    func printMsg() {
        print msg;
    }
    return printMsg;
}
let p = givePrinter("Delayed hello");

func maker(x) {
    func printx() {
        print "x = " + x;
    }
    return printx;
}
let f1 = maker(5);
let f2 = maker(10);
f1();
f2();


p();


func countdown(n) {
    if n > 0 {
        print n;
        countdown(n - 1);
    }
}
countdown(3);

p();


func makeToggle() {
    let ret = 0;
    {
        let on = false;
        func toggle() {
            if on {
                on = false;
            } else { on = true; }
            print "State: " + on;
        }
        ret = toggle;
    }
    return ret;
}

let t = makeToggle();
t(); // State: true
t(); // State: false

func makeConditionPrinter(x) {
    let ret = 0;
    if (x > 5) {
        let msg = "x is big";
        func printMsg() {
                print msg;
        }
        ret = printMsg;
    } else {
        let msg = "x is small";
        func printMsg() {
                print msg;
        }
        ret = printMsg;
    }
    return ret;
}

let c = makeConditionPrinter(10)(); // x is big
let c_ = makeConditionPrinter(3)();  // x is small

func makefuncfuncfunc(a) {
    func inner1(b, c) {
        func inner2(d, e, f) {
            print "Args: " + a + ", " + b + ", " + c + ", " + d + ", " + e + ", " + f;
        }
        return inner2;
    }
    return inner1;
}

makefuncfuncfunc(1)(2, 3)(4, 5, 6);
func adder() {
    let x = 0;
    func f() {
        print x = x + 1;
        return f;
    }
    return f;
}
let arr = adder();
let _2 = arr()()();
_2()()()();