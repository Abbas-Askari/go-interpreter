import "net";
import "math";
import "json";
import "async";
import "API";
import "fs";

let api = new API.CachedApi();

let server = new net.Server();
server.get("/stream", (req, res) => {
    let f = fs.open("image.jpg", "r");
    res.writeHeader("Content-Type", "image/jpeg");
    res.writeHeader("Transfer-Encoding", "chunked");

    let CHUNK_SIZE = 65536; // 64k, Idk, just landed on this
    for let i = 0; i < f.length() / CHUNK_SIZE; i = i + 1 {
        let result = f.read(math.min(CHUNK_SIZE, f.length() - i * CHUNK_SIZE));
        let chunk = result[0];
        let err = result[1];
        if err != nil {
            print "Error reading file chunk: " + err;
            break;
        }
        res.write(chunk);
    }
    res.end();
});

server.get('start-logs', (req, res) => {
    async.setInterval(api.dump, 50);
});

server.post("/forward", (req, res) => {
    let bodyString = req.body();
    let body = json.parse(bodyString);
    let id = body.a.d.c.d.e;

    api.get(id, (data) => {
        res.writeHeader("Content-Type", "application/json");
        res.writeStatus(200);
        res.write(json.stringify(data));
        res.end();
    });
});

server.get('/stats', (req, res) => {
    res.writeHeader("Content-Type", "application/json");
    res.writeStatus(200);
    res.write(json.stringify({
        hits: api.hits,
        misses: api.misses
    }));
    res.end();
});

server.listen(2000);
print "Server started at http://localhost:2000";