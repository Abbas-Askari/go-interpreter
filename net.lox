import "strings";

func NewHandler(path, handlerFunction) {
    let handler = {};
    
    func match(x)  {
        return x.endsWith(path);      
    }

    func handle() {
        handlerFunction();
    }

    handler.match = match;
    handler.handle = handle;
    return handler;
}

print NewHandler;

func NewServer() {
    let server = {};
    let handlers = [];
    func post(path, handlerFunction) {
        NewHandler(path, handlerFunction);
    }
    func get(path, handler) {
        handlers = handlers.push(NewHandler(path, handler));
    }

    func printHandlers() {
        print "Handlers: " + handlers;
    }

    func multiplexer(req, res) {
        print "Request URL: " + req.path;
        for let i = 0; i < handlers.length; i = i + 1 {
            let h = handlers[i];
            print "Checking handler: " + h + " for path: " + req.path;
            if (h.match(req.path)) {
                print "Matched handler: " + h;
                h.handle(req, res);
                return;
            }
        }
        res.end();
    }

    func startServer(port) {
        listen(multiplexer, port);
    }

    server.listen = startServer;
    server.post = post;
    server.get = get;
    server.printHandlers = printHandlers;
    return server;
}

print NewServer();

print "Goodbye from net";
exports.NewServer = NewServer;